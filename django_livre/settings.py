"""
O tema do trabalho será livre e deverá possuir, obrigatoriamente os seguintes elementos:

ok Um CRUD (Funcionalidades de adicionar/remover/atualizar e recuperar) usando Generic Views para listar e inserir/remover/atualizar os elementos

Alguma operação (consulta, inserção, atualização ou remoção) usando Ajax

Uma das consultas ao banco de dados devem possuir filtro pelo usuário autenticado

ok Autenticação e a tela dos CRUDs só podem ser usadas se autenticado

Uso de cache para alguma view e para algum template

Uma das telas devem ser testadas usando um teste unitário Django apropriado. O teste deverá efetuar operação de consulta, inserção, remoção e atualização dos elementos simulando a requisição.

Entrega e Apresentação

A entrega deve ser no dia 05/12 e a apresentação dia 06/12

ok Você deverá criar um ambiente virtual e gerar o arquivo requirements.txt com todas as dependencias do projeto. Use o Bitbucket para criar um repositório, e use pipeline testando por meio do teste unitário criado. Assim, sempre que alguém de commit na aplicação, os testes serão executados e vocês serão informados se, depois de algum commit, sua aplicação parou de funcionar <3.

Crie um repositório público no bitbucket. Entregue o link deste repositório. Crie um readme.md com (a) os integrantes do grupo (máximo 3); (b) instruções para implantação do sistema para o prof poder executá-lo.
"""
"""
Django settings for django_livre project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yt9s(c()yio=o*bz#mydcq_cz$m^y%6y2h+ytjro^&qmv^o$00'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'events'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_livre.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_livre.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'TEST': {
                'NAME': 'mytestdatabase',
            },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
LOGIN_REDIRECT_URL = 'event_list'
LOGOUT_REDIRECT_URL = 'logout'
STATIC_URL = '/static/'
